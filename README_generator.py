import os
from pathlib import Path
from datetime import datetime

CURRENT_TIME = "2025-05-12 09:50:02"
CURRENT_USER = "SpreadSheets600"


def count_wallpapers(directory):
    return len(
        [
            f
            for f in os.listdir(directory)
            if f.lower().endswith((".jpg", ".jpeg", ".png", ".gif"))
        ]
    )


def get_directory_size(directory):
    total_size = 0
    for f in os.listdir(directory):
        if f.lower().endswith((".jpg", ".jpeg", ".png", ".gif")):
            file_path = os.path.join(directory, f)
            total_size += os.path.getsize(file_path)
    return round(total_size / (1024 * 1024), 2)


def get_image_details(directory):
    images = []
    for f in os.listdir(directory):
        if f.lower().endswith((".jpg", ".jpeg", ".png", ".gif")):
            file_path = os.path.join(directory, f)
            size_mb = round(os.path.getsize(file_path) / (1024 * 1024), 2)
            images.append(
                {
                    "name": f,
                    "size": size_mb,
                    "path": str(Path(file_path).relative_to(directory)),
                }
            )
    return sorted(images, key=lambda x: x["name"])


def generate_main_readme(base_dir):
    categories = [d for d in base_dir.iterdir() if d.is_dir()]

    total_wallpapers = sum(count_wallpapers(cat) for cat in categories)
    total_size = sum(get_directory_size(cat) for cat in categories)

    readme_content = f"""# üñºÔ∏è Wallpaper Collection

A curated collection of high-quality wallpapers organized by categories.

## üìä Statistics

- **Total Wallpapers:** {total_wallpapers}
- **Total Size:** {total_size:.2f} MB
- **Categories:** {len(categories)}
- **Last Updated:** {CURRENT_TIME} UTC

## üìÇ Categories

| Category | Wallpapers | Size (MB) | Preview |
|----------|------------|-----------|---------|
"""
    for cat in sorted(categories):
        wallpaper_count = count_wallpapers(cat)
        category_size = get_directory_size(cat)
        cat_name = cat.name.title()
        readme_content += f"| [üìÅ {cat_name}](Wallpapers/{cat.name}/README.md) | {wallpaper_count} | {category_size:.2f} | [Browse](Wallpapers/{cat.name}) |\n"

    readme_content += f"""
## üóÇÔ∏è Directory Structure

## üîç Usage

1. Click on any category link above to view its details
2. Navigate to the category folder to view/download wallpapers
3. Each category has its own README with wallpaper previews

## üîÑ Last Update Information
- **Updated at:** {CURRENT_TIME} UTC
- **Updated by:** [{CURRENT_USER}](https://github.com/{CURRENT_USER})

## üìù License

This collection is maintained for personal use. All wallpapers belong to their respective creators.

---
Generated by [{CURRENT_USER}](https://github.com/{CURRENT_USER})'s Wallpaper Collection Manager
"""

    return readme_content


def generate_category_readme(category_path, category_name):
    images = get_image_details(category_path)
    total_size = sum(img["size"] for img in images)

    readme_content = f"""# üìÅ {category_name.title()} Wallpapers

Collection of {len(images)} wallpapers in the {category_name.title()} category.

## üìä Category Statistics
- **Number of Wallpapers:** {len(images)}
- **Total Size:** {total_size:.2f} MB
- **Last Updated:** {CURRENT_TIME} UTC

## üìë Navigation
- [‚¨ÜÔ∏è Back to Main Collection](../../README.md)

## üìã Wallpaper List

| Thumbnail | File Name | Size (MB) |
|-----------|-----------|-----------|
"""
    for img in images:
        readme_content += (
            f"| ![]({img['path']}) | [{img['name']}]({img['path']}) | {img['size']} |\n"
        )

    readme_content += f"""

## üîÑ Update Information
- **Updated at:** {CURRENT_TIME} UTC
- **Updated by:** [{CURRENT_USER}](https://github.com/{CURRENT_USER})

---
Generated by [{CURRENT_USER}](https://github.com/{CURRENT_USER})'s Wallpaper Collection Manager
"""

    return readme_content


def main():
    BASE_DIR = Path("/home/soham/Desktop/Coding/Wallpapers/Wallpapers")

    main_readme_content = generate_main_readme(BASE_DIR)
    with open(BASE_DIR / "README.md", "w", encoding="utf-8") as f:
        f.write(main_readme_content)

    categories = [d for d in BASE_DIR.iterdir() if d.is_dir()]
    for cat in categories:
        category_readme = generate_category_readme(cat, cat.name)
        with open(cat / "README.md", "w", encoding="utf-8") as f:
            f.write(category_readme)


if __name__ == "__main__":
    main()
